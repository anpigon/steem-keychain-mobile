name: Continuous Integration

on:
  # pull_request:
  #   branches:
  #     - develop
  #     - master
  workflow_dispatch:

jobs:
  build_android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Cache node modules
        id: node-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install Dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Run test
        run: npm run test

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew

      - name: Build Android App Bundle
        run: |
          cp android/gradle.properties.example android/gradle.properties
          cd android && ./gradlew bundleRelease --no-daemon

      - name: Sign App Bundle
        id: sign_app
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: android/app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_SIGNING_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Signed App Bundle
          path: ${{steps.sign_app.outputs.signedReleaseFile}}

      - name: Distribute app via Firebase App Distribution
        env:
            firebaseToken: ${{ secrets.FIREBASE_TOKEN }}
            firebaseGroups: ${{ secrets.FIREBASE_GROUPS }}
            firebaseAppId: ${{ secrets.FIREBASE_APP_ID }}
            notes: ${{ github.event.head_commit.message }}
        run: |
          npm install -g firebase-tools
          export PATH="$(npm bin -g):$PATH"
          firebase \
            appdistribution:distribute \
            android/app/build/outputs/apk/release/app-release.apk \
            --app $firebaseAppId \
            --release-notes "$notes" \
            --groups "$firebaseGroups" \
            --token "$firebaseToken"

      # - name: Deploy to Play Store (BETA)
      #   uses: r0adkll/upload-google-play@v1
      #   with:
      #     serviceAccountJsonPlainText: ${{ secrets.ANDROID_SERVICE_ACCOUNT }}
      #     packageName: com.testedapp
      #     releaseFile: a${{steps.sign_app.outputs.signedReleaseFile}}
      #     track: beta
      #     inAppUpdatePriority: 3
      #     userFraction: 0.5
      #     whatsNewDirectory: android/release-notes/
